**********************************************************************
t_a EQU 5;

e_1 EQU 2;
e_2 EQU 1;

t_b EQU 15;

* Параметры гиперэкспоненциального распределения:
RN_H	EQU	91; номер генератора для гиперэкспоненциального распределения
qq	EQU	0.3; вероятность выбора первой фазы
tt_1	EQU	43; мат. ожидание первой фазы гиперэкспоненциального распределения
tt_2	EQU	3; мат. ожидание второй фазы гиперэкспоненциального распределения

* Область описания
Uzel1 STORAGE 1; задание числа приборов в устройстве с именем Uzel
Uzel2 STORAGE 1; задание числа приборов в устройстве с именем Uzel
Tw_1 QTABLE 1,2,2,50
Tw_2 QTABLE 2,2,2,50
Tu_1 TABLE M1,50,4,50
Tu_2 TABLE M1,7,7,50
**********************************************************************
*Модуль 1: моделирование процессов поступления и обслуживания заявок 1-го класса
 GENERATE (Exponential(1,0,t_a)); формирование простейшего потока
 TEST L Q1,e_1,Otk_1; проверка длины очереди
 QUEUE 1; регистрация момента поступления заявки в очередь 1
 ENTER Uzel1; попытка занять один из приборов устройства Uzel
 DEPART 1; регистрация момента покидания заявки очереди 1
 ADVANCE (Exponential(23,0,t_b));; задержка заявки на 50 единиц модельного времени
 LEAVE Uzel1; освобождение прибора Uzel
 TABULATE Tu_1
 TERMINATE 1; удаление из модели обслуженной заявки 1-го класса
Otk_1 TERMINATE 1; удаление не обслуженной заявки 1-го класса
**********************************************************************
*Модуль 2: моделирование процессов поступления и обслуживания заявок 2-го класса
 GENERATE (Exponential(2,0,t_a)); формирование равномерно распределенного потока
 TEST L Q2,e_2,Otk_2; проверка длины очереди 2
 QUEUE 2; регистрация момента поступления заявки в очередь 2
 ENTER Uzel2; попытка занять один из приборов устройства Uzel
 DEPART 2; регистрация момента покидания заявки очереди 2
 ADVANCE (hyper1(RN_H, qq, tt_1, tt_2)); задержка заявки 2-го класса
 LEAVE Uzel2; освобождение прибора Uzel
 TABULATE Tu_2
 TERMINATE 1; удаление из модели обслуженной заявки 2-го класса
Otk_2 TERMINATE 1; удаление не обслуженной заявки 2-го класса
**********************************************************************
PROCEDURE hyper1(RN_H, qq, tt_1, tt_2) BEGIN
	if (uniform(1,0,1) < qq) then return exponential(RN_H,0,tt_1);
	else return exponential(RN_H,0,tt_2);
END;